{
    "botWelcome": "*Olá! Eu sou o {botName}!*\nEu fui feito com amor por uns nerds que amam programação!\n\n*Ao usar o {botName}, você afirma que leu e concorda com a política de privacidade (/privacy). Isso ajuda você a entender onde seus dados vão ao usar este bot.*\n\nAlém disso, você pode usar /help para ver os meus comandos!",
    "botHelp": "*Oi, eu sou o {botName}, um bot simples feito do zero em Telegraf e Node.js por uns nerds que gostam de programação.*\n\nVeja o código fonte: [Clique aqui para ir ao GitHub]({sourceLink})\n\nClique nos botões abaixo para ver quais comandos você pode usar!\n",
    "botPrivacy": "Acesse [este link]({botPrivacy}) para ler a política de privacidade do bot.",
    "botAbout": "*Sobre o bot*\n\nA base deste bot foi feita originalmente por [Lucas Gabriel (lucmsilva)](https://github.com/lucmsilva651), agora sendo mantido por várias pessoas.\n\nA intenção do bot é trazer diversão para os seus grupos aqui no Telegram de uma maneira bem descontraida e simples. O bot também conta com alguns comandos bem úteis, que você consegue ver com o comando de ajuda (/help).\n\nAgradecimento especial ao @givfnz2 pelas suas várias contribuições ao bot!\n\nVeja o código fonte: [Clique aqui para ir ao GitHub]({sourceLink})",
    "aboutBot": "Sobre o bot",
    "varStrings": {
        "varYes": "Sim",
        "varNo": "Não",
        "varTo": "",
        "varIs": "está",
        "varWas": "estava",
        "varNone": "Nenhum",
        "varUnknown": "Desconhecido",
        "varBack": "Voltar"
    },
    "unexpectedErr": "Algum erro inesperado ocorreu durante uma ação do bot. Por favor, reporte aos desenvolvedores.\n\n{error}",
    "errInvalidOption": "Ops! Opção inválida!",
    "kickingMyself": "*Já que você não precisa de mim, vou sair daqui.*",
    "kickingMyselfErr": "Erro ao sair do chat.",
    "noPermission": "Você não tem permissão para executar este comando.",
    "privateOnly": "Este comando deve ser usado apenas em chats privados, não em grupos.",
    "groupOnly": "Este comando deve ser usado apenas em grupos, não em chats privados.",
    "botNameChanged": "*Nome do bot alterado para* `{botName}`.",
    "botNameErr": "*Erro ao alterar o nome do bot:*\n`{tgErr}`",
    "botDescChanged": "*Descrição do bot alterada para* `{botDesc}`.",
    "botDescErr": "*Erro ao alterar a descrição do bot:*\n`{tgErr}`",
    "gayAmount": "Você é *{randomNum}%* gay!",
    "furryAmount": "Você é *{randomNum}%* furry!",
    "randomNum": "*Número gerado (0-10):* `{number}`.",
    "userInfo": "*Informações do usuário*\n\n*Nome:* `{userName}`\n*Usuário:* `{userHandle}`\n*ID:* `{userId}`\n*Idioma:* `{userLang}`\n*Usuário Premium:* `{userPremium}`",
    "chatInfo": "*Informações do chat*\n\n*Nome:* `{chatName}`\n*ID do chat:* `{chatId}`\n*Identificador:* `{chatHandle}`\n*Tipo:* `{chatType}`\n*Membros:* `{chatMembersCount}`\n*É um fórum:* `{isForum}`",
    "funEmojiResult": "*Você lançou {emoji} e obteve *`{value}`*!*\nVocê não sabe o que isso significa? Nem eu!",
    "gifErr": "*Algo deu errado ao enviar o GIF. Tente novamente mais tarde.*\n\n{err}",
    "lastFm": {
        "helpEntry": "Last.fm",
        "helpDesc": "*Last.fm*\n\n- /lt | /lmu | /last | /lfm: Mostra a última música do seu perfil no Last.fm + o número de reproduções.\n- /setuser `<usuário>`: Define o usuário para o comando acima.",
        "noUser": "*Por favor, forneça um nome de usuário do Last.fm.*\nExemplo: `/setuser <username>`",
        "noUserSet": "*Você ainda não definiu seu nome de usuário do Last.fm.*\nUse o comando /setuser para definir.\n\nExemplo: `/setuser <username>`",
        "noRecentTracks": "*Nenhuma faixa recente encontrada para o usuário do Last.fm* `{lastfmUser}`*.*",
        "userHasBeenSet": "*Seu nome de usuário do Last.fm foi definido como:* `{lastUser}`.",
        "listeningTo": "{lastfmUser} *{nowPlaying} ouvindo{playCount}*:\n\n{trackName} por {artistName}",
        "playCount": " pela {plays}ª vez",
        "apiErr": "*Erro ao recuperar dados para o usuário do Last.fm* {lastfmUser}.\n\n`{err}`"
    },
    "gitCurrentCommit": "*Commit atual:* `{commitHash}`",
    "gitErrRetrievingCommit": "*Erro ao obter o commit:* {error}",
    "weatherStatus": {
        "provideLocation": "*Por favor, forneça uma localização.*",
        "invalidLocation": "*Localização inválida. Tente novamente.*",
        "resultMsg": "*Clima em {addressFirst}:*\n\n*Estado:* `{getStatusEmoji(iconCode)} {wxPhraseLong}`\n*Temperatura:* `{temperature} °{temperatureUnit}`\n*Sensação térmica:* `{temperatureFeelsLike} °{temperatureUnit2}`\n*Umidade:* `{relativeHumidity}%`\n*Velocidade do vento:* `{windSpeed} {speedUnit}`",
        "apiErr": "*Ocorreu um erro ao obter o clima. Tente novamente mais tarde.*\n\n`{error}`"
    },
    "mainCommands": "Comandos principais",
    "mainCommandsDesc": "*Comandos principais*\n\n- /help: Exibe a ajuda do bot\n- /start: Inicia o bot\n- /privacy: Leia a política de privacidade do bot",
    "usefulCommands": "Comandos úteis",
    "usefulCommandsDesc": "*Comandos úteis*\n\n- /chatinfo: Envia informações sobre o grupo\n- /userinfo: Envia informações sobre você\n- /d | /device `<modelo>`: Pesquisa um dispositivo no GSMArena e mostra suas especificações.\n- /weather | /clima `<cidade>`: Veja o status do clima para uma localização específica\n- /modarchive | /tma `<id do módulo>`: Baixa um módulo do The Mod Archive.\n- /http `<código HTTP>`: Envia detalhes sobre um código HTTP específico. Exemplo: `/http 404`",
    "funnyCommands": "Comandos engraçados",
    "funnyCommandsDesc": "*Comandos engraçados*\n\n- /gay: Verifique se você é gay\n- /furry: Verifique se você é furry\n- /random: Escolhe um número aleatório entre 0-10",
    "interactiveEmojis": "Emojis interativos",
    "interactiveEmojisDesc": "*Emojis interativos*\n\n- /dice: Jogue um dado\n- /idice: Role infinitamente um dado colorido\n- /slot: Tente combinar as figuras!\n- /ball: Tente chutar a bola no gol!\n- /bowling: Tente derrubar os pinos!\n- /dart: Tente acertar o alvo!",
    "animalCommands": "Animais",
    "animalCommandsDesc": "*Animais*\n\n- /soggy | /soggycat `<1 | 2 | 3 | 4 | orig | thumb | sticker | alt>`: Envia o [meme do gato encharcado](https://knowyourmeme.com/memes/soggy-cat)\n- /cat - Envia uma foto aleatória de um gato.\n- /fox - Envia uma foto aleatória de uma raposa.\n- /duck - Envia uma foto aleatória de um pato.\n- /dog - Envia uma imagem aleatória de um cachorro.\n- /httpcat `<código http>`: Envia memes de gato do http.cat com o código HTTP especificado. Exemplo: `/httpcat 404`",
    "maInvalidModule": "Por favor, forneça um ID de módulo válido do The Mod Archive.\nExemplo: `/modarchive 81574`",
    "maDownloadError": "Erro ao baixar o arquivo. Verifique o ID do módulo e tente novamente.",
    "ytDownload": {
        "helpEntry": "Download de vídeos",
        "helpDesc": "*Download de vídeos*\n\n- /yt | /ytdl | /sdl | /dl | /video `<link do vídeo>`: Baixa um vídeo de algumas plataformas (ex: YouTube, Instagram, Facebook, etc.).\n\nConsulte [este link](https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md) para obter mais informações e saber quais serviços são compatíveis.\n\n*Nota: O Telegram está atualmente limitando os uploads de bots a 50MB, o que significa que se o vídeo que você deseja baixar for maior que 50MB, a qualidade será reduzida para tentar carregá-lo de qualquer maneira. Estamos fazendo o possível para contornar ou corrigir esse problema.*",
        "downloadingVid": "*Baixando vídeo...*",
        "libNotFound": "*Parece que o executável do yt-dlp não existe no nosso servidor...\n\nNesse caso, o problema está no nosso lado! Aguarde até que tenhamos notado e resolvido o problema.*",
        "checkingSize": "Verificando se o vídeo excede o limite de 50 MB...",
        "uploadingVid": "*Enviando vídeo...*",
        "msgDesc": "{userMention}*, aqui está o seu vídeo baixado.*",
        "downloadErr": "*Erro durante o download do vídeo do YT:*\n\n`{err}`",
        "uploadErr": "Erro ao enviar o arquivo. Tente novamente mais tarde.\n\n{error}",
        "uploadLimit": "*Este vídeo excede o limite de carregamento de 50 MB imposto pelo Telegram ao nosso bot. Por favor, tente outro vídeo. Estamos fazendo o possível para aumentar esse limite.*",
        "sizeLimitWarn": "*Esse vídeo teve a qualidade reduzida por estar excedendo o limite de 50MB para uploads imposto pelo Telegram.*",
        "noLink": "*Por favor, forneça um link de um vídeo para download.*"
    },
    "botUpdated": "Bot atualizado com sucesso.\n\n```{result}```",
    "errorUpdatingBot": "Erro ao atualizar o bot\n\n{error}",
    "catImgErr": "Desculpe, mas não consegui obter a foto do gato que você queria.",
    "catGifErr": "Desculpe, mas não consegui obter o GIF do gato que você queria.",
    "dogImgErr": "Desculpe, mas não consegui obter a foto do cacbhorro que você queria.",
    "foxApiErr": "Ocorreu um erro ao buscar dados da API.\n\n`{error}`",
    "duckApiErr": "Ocorreu um erro ao buscar dados da API.\n\n`{error}`",
    "httpCodes": {
        "invalidCode": "Por favor, insira um código HTTP válido.",
        "fetchErr": "Ocorreu um erro ao buscar o código HTTP.",
        "notFound": "Código HTTP não encontrado.",
        "resultMsg": "*Código HTTP*: `{code}`\n*Nome*: `{message}`\n*Descrição*: `{description}`"
    },
    "ponyApi": {
        "helpEntry": "My Little Pony",
        "helpDesc": "*My Little Pony*\n\n- /mlp: Exibe esta mensagem de ajuda.\n- /mlpchar `<nome do personagem>`: Mostra informações específicas sobre um personagem de My Little Pony em inglês. Exemplo: `/mlpchar twilight`\n- /mlpep: Mostra informações específicas sobre um episódio de My Little Pony em inglês. Exemplo: `/mlpep 136`\n- /mlpcomic `<nome da comic>`: Mostra informações específicas sobre uma comic de My Little Pony em inglês. Exemplo: `/mlpcomic Nightmare Rarity`\n- /rpony | /randompony | /mlpart: Envia uma arte aleatória feita pela comunidade de My Little Pony.",
        "charRes": "*{name} (ID: {id})*\n\n*Apelido:* `{alias}`\n*Sexo:* `{sex}`\n*Residência:* `{residence}`\n*Ocupação:* `{occupation}`\n*Tipo:* `{kind}`\n\n*URL no Fandom:*\n[{url}]({url})",
        "epRes": "*{name} (ID: {id})*\n\n*Temporada:* `{season}`\n*Episódio:* `{episode}`\n*Número do Episódio:* `{overall}`\n*Data de lançamento:* `{airdate}`\n*História por:* `{storyby}`\n*Escrito por:* `{writtenby}`\n*Storyboard:* `{storyboard}`\n\n*URL no Fandom:*\n[{url}]({url})",
        "comicRes": "*{name} (ID: {id})*\n\n*Série:* `{series}`\n*Roteirista:* `{writer}`\n*Artista:* `{artist}`\n*Colorista:* `{colorist}`\n*Letrista:* `{letterer}`\n*Editor:* `{editor}`\n\n*URL no Fandom:*\n[{url}]({url})",
        "noCharName": "Por favor, forneça o nome do personagem.",
        "noCharFound": "Nenhum personagem encontrado.",
        "noEpisodeNum": "Por favor, forneça o número do episódio.",
        "noEpisodeFound": "Nenhum episódio encontrado.",
        "noComicName": "Por favor, forneça o nome da comic.",
        "noComicFound": "Nenhuma comic foi encontrada.",
        "apiErr": "Ocorreu um erro ao buscar dados da API.\n\n`{error}`"
    },
    "codenameCheck": {
        "noCodename": "Por favor, forneça um codinome para pesquisar.",
        "invalidCodename": "Codinome inválido.",
        "notFound": "Celular não encontrado.",
        "resultMsg": "*Nome:* `{name}`\n*Marca:* `{brand}`\n*Modelo:* `{model}`\n*Codinome:* `{codename}`",
        "apiErr": "Ocorreu um erro ao buscar os dados da API.\n\n`{err}`"
    }
}
